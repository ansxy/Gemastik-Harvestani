// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @unique @default(uuid())
  email             String         @unique
  password          String
  refresh_tokens    RefreshToken[]
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt

  lahan             Lahan[]
}

model RefreshToken {
  id            String   @id @unique @default(uuid())
  hashed_token  String
  user_id       String
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  revoked       Boolean  @default(false)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model Lahan {
  id          String @id @unique @default(uuid())
  user_id     String
  User        User  @relation(fields: [user_id], references: [id])
  nama        String
  luas        Decimal
  alamat      String
  lat         Decimal
  lon         Decimal
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())

  tanam       Tanam[]
  image       LahanImage[]
}

model LahanImage {
  id          String @id @unique @default(uuid())
  lahan_id    String
  lahan       Lahan @relation(fields: [lahan_id], references: [id])

  path        String

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())
}

enum JenisBibit {
  Sayuran
  Buah
}

model Bibit {
  id          String @id @unique @default(uuid())
  nama        String
  deskripsi   String
  harga_beli   String
  jenis       JenisBibit

  tanam       Tanam[]

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())
}

enum StatusTanam {
  Planning
  Executing
  Closed
}

model Tanam {
  id              String @id @unique @default(uuid())
  lahan_id        String
  lahan           Lahan @relation(fields: [lahan_id], references: [id])
  bibit_id        String
  bibit           Bibit @relation(fields: [bibit_id], references: [id])
  tanggal_tanam   DateTime?
  tanggal_panen   DateTime?
  jumlah_panen    Int
  harga_panen     Int
  status          StatusTanam
  jarak           Int @default(30)

  aktivitas_tanam AktivitasTanam[]

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())
}

model AktivitasTanam {
  id                String @id @unique @default(uuid())
  tanam_id          String
  tanam             Tanam @relation(fields: [tanam_id], references: [id])
  nama              String
  keterangan        String
  pupuk             Int
  tanggal_aktivitas DateTime?

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())
}
